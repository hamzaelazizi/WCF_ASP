@model StudentWcfConsume.ServiceReference1.Student

@{
    ViewBag.Title = "UpdateStudent";
}

<h2>UpdateStudent</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal ">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            
            <div class="col-md-10">
                @Html.LabelFor(model => model.cin, htmlAttributes: new { @class = "form-label text-uppercase mb-n2 mt-2" })
                @Html.EditorFor(model => model.cin, new { htmlAttributes = new { @Value = ViewBag.st.cin, @class = "form-control", @disabled = "" } })
                @Html.ValidationMessageFor(model => model.cin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
           
            <div class="col-md-10">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "form-label text-uppercase mb-n2 mt-2" })
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @Value = ViewBag.st.email, @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
          
            <div class="col-md-10">
                @Html.LabelFor(model => model.fil, htmlAttributes: new { @class = "form-label text-uppercase mb-n2 mt-2" })
                @Html.EditorFor(model => model.fil, new { htmlAttributes = new { @Value = ViewBag.st.fil, @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fil, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            
            <div class="col-md-10">
                @Html.LabelFor(model => model.first_name, htmlAttributes: new { @class = "form-label text-uppercase mb-n2 mt-2" })
                @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @Value = ViewBag.st.first_name, @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            
            <div class="col-md-10">
                @Html.LabelFor(model => model.last_name, htmlAttributes: new { @class = "form-label text-uppercase mb-n2 mt-2" })
                @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @Value = ViewBag.st.last_name, @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
           
            <div class="col-md-10">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "form-label text-uppercase mb-n2 mt-2" })
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @Value = ViewBag.st.phone, @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mt-4 mb-2">
            <div>
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "GetStudents", null, new { @class = "breadcrumb-item" })
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
